/*
 * This file is generated by jOOQ.
 */
package cn.zenliu.jcef.model.tables.daos;


import cn.zenliu.jcef.model.tables.Sign;
import cn.zenliu.jcef.model.tables.records.SignRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SignDao extends DAOImpl<SignRecord, cn.zenliu.jcef.model.tables.pojos.Sign, Integer> {

    /**
     * Create a new SignDao without any configuration
     */
    public SignDao() {
        super(Sign.SIGN, cn.zenliu.jcef.model.tables.pojos.Sign.class);
    }

    /**
     * Create a new SignDao with an attached configuration
     */
    @Autowired
    public SignDao(Configuration configuration) {
        super(Sign.SIGN, cn.zenliu.jcef.model.tables.pojos.Sign.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(cn.zenliu.jcef.model.tables.pojos.Sign object) {
        return object.getIdx();
    }

    /**
     * Fetch records that have <code>idx IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Sign> fetchByIdx(Integer... values) {
        return fetch(Sign.SIGN.IDX, values);
    }

    /**
     * Fetch a unique record that has <code>idx = value</code>
     */
    public cn.zenliu.jcef.model.tables.pojos.Sign fetchOneByIdx(Integer value) {
        return fetchOne(Sign.SIGN.IDX, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Sign> fetchByName(String... values) {
        return fetch(Sign.SIGN.NAME, values);
    }

    /**
     * Fetch records that have <code>conf_id IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Sign> fetchByConfId(Integer... values) {
        return fetch(Sign.SIGN.CONF_ID, values);
    }

    /**
     * Fetch records that have <code>depart IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Sign> fetchByDepart(String... values) {
        return fetch(Sign.SIGN.DEPART, values);
    }

    /**
     * Fetch records that have <code>device_id IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Sign> fetchByDeviceId(String... values) {
        return fetch(Sign.SIGN.DEVICE_ID, values);
    }

    /**
     * Fetch records that have <code>card_id IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Sign> fetchByCardId(String... values) {
        return fetch(Sign.SIGN.CARD_ID, values);
    }

    /**
     * Fetch records that have <code>card_type IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Sign> fetchByCardType(String... values) {
        return fetch(Sign.SIGN.CARD_TYPE, values);
    }

    /**
     * Fetch records that have <code>check_in IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Sign> fetchByCheckIn(LocalDateTime... values) {
        return fetch(Sign.SIGN.CHECK_IN, values);
    }

    /**
     * Fetch records that have <code>check_out IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Sign> fetchByCheckOut(LocalDateTime... values) {
        return fetch(Sign.SIGN.CHECK_OUT, values);
    }
}
