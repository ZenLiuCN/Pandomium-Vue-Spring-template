/*
 * This file is generated by jOOQ.
 */
package cn.zenliu.jcef.model.tables.records;


import cn.zenliu.jcef.model.tables.Conference;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConferenceRecord extends UpdatableRecordImpl<ConferenceRecord> implements Record4<Integer, LocalDateTime, String, String> {

    private static final long serialVersionUID = 487317202;

    /**
     * Setter for <code>public.conference.idx</code>.
     */
    public ConferenceRecord setIdx(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.conference.idx</code>.
     */
    public Integer getIdx() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.conference.create_at</code>.
     */
    public ConferenceRecord setCreateAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.conference.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.conference.name</code>.
     */
    public ConferenceRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.conference.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.conference.net_id</code>.
     */
    public ConferenceRecord setNetId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.conference.net_id</code>.
     */
    public String getNetId() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, LocalDateTime, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, LocalDateTime, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Conference.CONFERENCE.IDX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return Conference.CONFERENCE.CREATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Conference.CONFERENCE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Conference.CONFERENCE.NET_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getIdx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component2() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getNetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getNetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value1(Integer value) {
        setIdx(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value2(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value4(String value) {
        setNetId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord values(Integer value1, LocalDateTime value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConferenceRecord
     */
    public ConferenceRecord() {
        super(Conference.CONFERENCE);
    }

    /**
     * Create a detached, initialised ConferenceRecord
     */
    public ConferenceRecord(Integer idx, LocalDateTime createAt, String name, String netId) {
        super(Conference.CONFERENCE);

        set(0, idx);
        set(1, createAt);
        set(2, name);
        set(3, netId);
    }
}
