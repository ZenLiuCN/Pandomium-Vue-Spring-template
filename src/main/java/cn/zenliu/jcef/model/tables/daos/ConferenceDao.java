/*
 * This file is generated by jOOQ.
 */
package cn.zenliu.jcef.model.tables.daos;


import cn.zenliu.jcef.model.tables.Conference;
import cn.zenliu.jcef.model.tables.records.ConferenceRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ConferenceDao extends DAOImpl<ConferenceRecord, cn.zenliu.jcef.model.tables.pojos.Conference, Integer> {

    /**
     * Create a new ConferenceDao without any configuration
     */
    public ConferenceDao() {
        super(Conference.CONFERENCE, cn.zenliu.jcef.model.tables.pojos.Conference.class);
    }

    /**
     * Create a new ConferenceDao with an attached configuration
     */
    @Autowired
    public ConferenceDao(Configuration configuration) {
        super(Conference.CONFERENCE, cn.zenliu.jcef.model.tables.pojos.Conference.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(cn.zenliu.jcef.model.tables.pojos.Conference object) {
        return object.getIdx();
    }

    /**
     * Fetch records that have <code>idx IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Conference> fetchByIdx(Integer... values) {
        return fetch(Conference.CONFERENCE.IDX, values);
    }

    /**
     * Fetch a unique record that has <code>idx = value</code>
     */
    public cn.zenliu.jcef.model.tables.pojos.Conference fetchOneByIdx(Integer value) {
        return fetchOne(Conference.CONFERENCE.IDX, value);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Conference> fetchByCreateAt(LocalDateTime... values) {
        return fetch(Conference.CONFERENCE.CREATE_AT, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Conference> fetchByName(String... values) {
        return fetch(Conference.CONFERENCE.NAME, values);
    }

    /**
     * Fetch records that have <code>net_id IN (values)</code>
     */
    public List<cn.zenliu.jcef.model.tables.pojos.Conference> fetchByNetId(String... values) {
        return fetch(Conference.CONFERENCE.NET_ID, values);
    }
}
