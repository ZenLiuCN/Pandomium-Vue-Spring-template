/*
 * This file is generated by jOOQ.
 */
package cn.zenliu.jcef.model;


import cn.zenliu.jcef.model.tables.Conference;
import cn.zenliu.jcef.model.tables.Sign;
import cn.zenliu.jcef.model.tables.records.ConferenceRecord;
import cn.zenliu.jcef.model.tables.records.SignRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ConferenceRecord, Integer> IDENTITY_CONFERENCE = Identities0.IDENTITY_CONFERENCE;
    public static final Identity<SignRecord, Integer> IDENTITY_SIGN = Identities0.IDENTITY_SIGN;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ConferenceRecord> CONSTRAINT_4 = UniqueKeys0.CONSTRAINT_4;
    public static final UniqueKey<SignRecord> CONSTRAINT_2 = UniqueKeys0.CONSTRAINT_2;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ConferenceRecord, Integer> IDENTITY_CONFERENCE = Internal.createIdentity(Conference.CONFERENCE, Conference.CONFERENCE.IDX);
        public static Identity<SignRecord, Integer> IDENTITY_SIGN = Internal.createIdentity(Sign.SIGN, Sign.SIGN.IDX);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ConferenceRecord> CONSTRAINT_4 = Internal.createUniqueKey(Conference.CONFERENCE, "constraint_4", Conference.CONFERENCE.IDX);
        public static final UniqueKey<SignRecord> CONSTRAINT_2 = Internal.createUniqueKey(Sign.SIGN, "constraint_2", Sign.SIGN.IDX);
    }
}
