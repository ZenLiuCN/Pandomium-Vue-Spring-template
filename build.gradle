buildscript {
    ext {
        kotlinVersion = '1.2.70'
        springBootVersion = '2.0.5.RELEASE'
    }
    ext['jooq.version'] = '3.11.5'
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.google.com' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        //flyway
        classpath "gradle.plugin.com.boxfuse.client:gradle-plugin-publishing:5.1.4"
        //jooq
        classpath 'nu.studer:gradle-jooq-plugin:3.0.2+'
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: "org.flywaydb.flyway"
apply plugin: 'nu.studer.jooq'

group = 'cn.zenliu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/' }
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'https://maven.google.com' }
    mavenCentral()
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-jooq')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile('com.h2database:h2')
    jooqRuntime('com.h2database:h2')
    compile('org.flywaydb:flyway-core')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
}
/*flyway {
    url = 'jdbc:mysql://192.168.99.100:3306/quest?useSSL=false&serverTimezone=CST'
    user = '***'
    password='***'
    schemas = ['quest']
    placeholders = [
            'prefix': 'q'
    ]
}*/
task BuildWebUI(type: Exec) {
    group='webui'
    description='build web ui'
    workingDir './ui'
    commandLine 'cmd', "/c yarn genspa"
}
task SyncWebUI(type:Sync){
    group='webui'
    description=' sync web ui'
    from("./ui/dist")
    into("./src/main/resources/static")
}

bootJar.dependsOn += SyncWebUI
jooq {
    version = '3.11.5'
    model(sourceSets.main) {
        jdbc {
            driver = 'org.h2.Driver'
            url = 'jdbc:h2:file:./config/conf;CIPHER=AES;MODE=MYSQL;DB_CLOSE_DELAY=-1'
            user = 'cmnt'
            password = 'cmnt cmnt'
        }
        generator {
            name = 'org.jooq.codegen.JavaGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.h2.H2Database'
                inputSchema = 'public'
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = false
                fluentSetters = true
                serializablePojos = true
                daos = true
                springAnnotations = true
                javaTimeTypes = true
            }
            target {
                packageName = 'cn.zenliu.jcef.model'
                directory = 'src/main/java' //Location of gen code
            }
        }
    }
}
compileJava.dependsOn -= 'generateModelJooqSchemaSource'
